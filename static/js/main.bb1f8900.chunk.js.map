{"version":3,"sources":["components/MovieList.js","components/Nominated.js","components/SearchAppBar.js","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","width","margin","media","height","btn","backgroundColor","color","padding","transform","MovieList","movies","handleNominateClick","classes","useState","disabled","setDisabled","map","movie","index","Card","className","CardActionArea","CardMedia","image","Poster","title","CardContent","Typography","gutterBottom","variant","component","style","Title","Year","CardActions","Button","startIcon","size","onClick","Nominated","theme","flexGrow","menuButton","marginRight","spacing","bar","marginBottom","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","props","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","value","onChange","event","setSearchValue","target","App","setMovies","nominated","setNominated","searchValue","getMovies","a","url","fetch","response","json","Search","useEffect","nominatedMovie","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","newNominatedList","length","Swal","fire","icon","text","filter","nominate","imdbID","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb1f8900.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n// import NominatedBtn from \"./NominatedBtn\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    width: 300,\n    margin: 15,\n    // \"&:hover\": { transform: \"scale(0.9)\" },\n  },\n  media: {\n    height: 300,\n  },\n\n  btn: {\n    backgroundColor: \"#008060\",\n    color: \"#fff\",\n    padding: 10,\n    \"&:hover\": {\n      backgroundColor: \"#0f6060\",\n      transform: \"scale(1.1)\",\n    },\n    \"&:disabled\": {\n      backgroundColor: \"grey\",\n    },\n  },\n});\n\nexport default function MovieList({ movies, handleNominateClick }) {\n  const classes = useStyles();\n  const [disabled, setDisabled] = useState(false);\n  return (\n    <>\n      {movies.map((movie, index) => (\n        <Card key={index} className={classes.root}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={movie.Poster}\n              title=\"Image Poster\"\n            />\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                style={{ height: 50 }}\n              >\n                {movie.Title} ({movie.Year})\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              startIcon={<StarsIcon />}\n              size=\"small\"\n              disabled={disabled}\n              className={classes.btn}\n              onClick={() => {\n                handleNominateClick(movie);\n                setDisabled(true);\n              }}\n            >\n              Nominate\n            </Button>\n            {/* <NominatedBtn\n              handleNominateClick={() => handleNominateClick(movie)}\n            /> */}\n          </CardActions>\n        </Card>\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    width: 300,\n    margin: 15,\n    // \"&:hover\": { transform: \"scale(0.9)\" },\n  },\n  media: {\n    height: 300,\n  },\n\n  btn: {\n    backgroundColor: \"#ff2000\",\n    color: \"#fff\",\n    padding: 10,\n    \"&:hover\": {\n      backgroundColor: \"#ff4000\",\n      transform: \"scale(1.1)\",\n    },\n  },\n});\n\nexport default function Nominated({ movies, handleNominateClick }) {\n  const classes = useStyles();\n  if (!movies) {\n    return \"\";\n  }\n  return (\n    <>\n      {movies.map((movie, index) => (\n        <Card key={index} className={classes.root}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={movie.Poster}\n              title=\"Image Poster\"\n            />\n            <CardContent>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n                style={{ height: 50 }}\n              >\n                {movie.Title} ({movie.Year})\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button\n              startIcon={<RemoveCircleIcon />}\n              size=\"small\"\n              className={classes.btn}\n              onClick={() => handleNominateClick(movie)}\n            >\n              Remove Nomination\n            </Button>\n          </CardActions>\n        </Card>\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  bar: {\n    backgroundColor: \"#004c3f\",\n    marginBottom: \"1rem\",\n  },\n  title: {\n    flexGrow: 1,\n    display: \"block\",\n    padding: 20,\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"50%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"20ch\",\n      \"&:focus\": {\n        width: \"30ch\",\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.bar}>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            The Shoppies\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              value={props.value}\n              onChange={(event) => props.setSearchValue(event.target.value)}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport MovieList from \"./components/MovieList\";\nimport Nominated from \"./components/Nominated\";\nimport SearchAppBar from \"./components/SearchAppBar\";\nimport Swal from \"sweetalert2\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [nominated, setNominated] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const getMovies = async (searchValue) => {\n    const url = `https://www.omdbapi.com/?s=${searchValue}&apikey=14454eea`;\n    const response = await fetch(url);\n    const json = await response.json();\n    if (json.Search) {\n      setMovies(json.Search);\n    }\n  };\n\n  useEffect(() => {\n    getMovies(searchValue);\n  }, [searchValue]);\n\n  useEffect(() => {\n    const nominatedMovie = JSON.parse(localStorage.getItem(\"nominated-movies\"));\n    setNominated(nominatedMovie);\n  }, []);\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"nominated-movies\", JSON.stringify(items));\n  };\n  const addNominated = (movie) => {\n    const newNominatedList = [...nominated, movie];\n    if (nominated.length < 5) {\n      setNominated(newNominatedList);\n      saveToLocalStorage(newNominatedList);\n      Swal.fire(\"Nice!\", \"Movie Nominated!\", \"success\");\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"You have Reached Your Maximum Nominations!!!\",\n      });\n    }\n  };\n\n  const removeNomination = (movie) => {\n    const newNominatedList = nominated.filter(\n      (nominate) => nominate.imdbID !== movie.imdbID\n    );\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You want to remove this movie from Nomination\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes!\",\n    }).then((result) => {\n      if (result.value) {\n        setNominated(newNominatedList);\n        saveToLocalStorage(newNominatedList);\n      }\n    });\n  };\n  return (\n    <div className=\"code\">\n      <SearchAppBar searchValue={searchValue} setSearchValue={setSearchValue} />\n      <div className=\"heading\">\n        <h1>Search Results</h1>\n      </div>\n      <div className=\"movie\">\n        <MovieList movies={movies} handleNominateClick={addNominated} />\n      </div>\n      <div className=\"heading\">\n        <h1>Nominated Movies</h1>\n      </div>\n      <div className=\"movie\">\n        <Nominated movies={nominated} handleNominateClick={removeNomination} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}